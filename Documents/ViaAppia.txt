Via Appia
*********
We have defined a data structure described in fill_db.py file. 

It defines where to put the background PCs (raw and converted, i.e. octree'ed) and the data of the sites.
Data fo sites includes pictures, meshes and PCs (also raw and converted)

The DATA folder must follow the rules described in fill_db.py. So, new data must adapt to such rules

IMPORTANT: 
 - The raw PC must have a JSON file with meta-data information which can be generated with script createpcjson.py
 - The convereted PC must have the JS file (which is already provided by the POTree converter)

We need a NGINX web server serving files in DATA folder. See Instructions/Configuring_NGINX

Via Appia DB
************
This section describes the Via Appia DB. 
This DB contains two parts:
 - Data management: information of the location of the data (which must follow the structure described in fill_db.py) to be used by the viewer developed by PattyVis group. 
 - Attribute data: information of attributes of the different sites of the Via Appia

ERDB.erm file contains the ER file (to be opened with ERMaster Eclipse plug-in)
This file can be used to generate the ERDB.sql (only Data management section)

To create the DB (in the server):
createdb vadb
psql vadb -c "create extension postgis";

To create the Data management tables:
psql vadb -f ERDB.sql

As indicated in ERDB.README we need to change the type of the column geom in table site.

With script fill_db.py the "Data management" can be filled with the data in DATA folder.

To fill the DB with Attribute data:

psql vadb -f attributes.sql 

attribute.sql must have been given by the Archeologists

After DB has been filled we can generate JSON for PattyVis with createjson.py

We put this json in root folder of web server, i.e. the DATA folder